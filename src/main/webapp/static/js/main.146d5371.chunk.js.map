{"version":3,"sources":["utils.js","components/Login.js","components/Register.js","components/Favorites.js","components/CustomSearch.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["SERVER_ORIGIN","loginUrl","login","credential","fetch","method","header","credentials","body","JSON","stringify","then","response","status","Error","json","registerUrl","register","data","headers","logoutUrl","logout","topGamesUrl","getGameDetailsUrl","searchGameByIdUrl","searchGameById","gameId","searchGameByName","gameName","getGameDetails","id","favoriteItemUrl","getFavoriteItem","getRecommendedItemsUrl","getRecommendations","Login","state","displayModal","signinOnClick","console","log","setState","handleCancel","onFinish","values","message","success","name","props","onSuccess","catch","err","error","this","shape","onClick","style","marginRight","title","visible","onCancel","footer","destroyOnClose","preserve","Item","rules","required","prefix","UserOutlined","className","placeholder","LockOutlined","type","htmlType","Component","Register","signupOnClick","res","SubMenu","Menu","MenuKey","Favorites","displayDrawer","onDrawerClose","onFavoriteClick","render","VIDEO","STREAM","CLIP","icon","StarFilled","placement","width","onClose","mode","defaultOpenKeys","height","borderRight","selectable","EyeOutlined","map","item","href","url","target","rel","broadcaster_name","YoutubeOutlined","VideoCameraOutlined","React","CustomSearch","searchOnClick","onSubmit","game_name","SearchOutlined","marginLeft","marginTop","TabPane","Tabs","tabKeys","renderCardTitle","loggedIn","favs","favOnChange","isFav","find","fav","StarOutlined","favItem","favorite","addFavoriteItem","overflow","textOverflow","renderCardGrid","grid","xs","sm","md","lg","xl","dataSource","renderItem","alt","src","thumbnail_url","replace","Home","resources","favoriteItems","favoriteOnChange","favVideos","favStreams","favClips","defaultActiveKey","tab","forceRender","Header","Layout","Sider","Content","App","topGames","customSearchOnSuccess","signinOnSuccess","signoutOnClick","onGameSelect","key","justify","display","onSelect","LikeOutlined","FireOutlined","game","box_art_url","borderRadius","stype","padding","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.146d5371.chunk.js","sourcesContent":["const SERVER_ORIGIN = '';\n\n// login api\nconst loginUrl = `${SERVER_ORIGIN}/login`;\n// credential ==> username + password\nexport const login = credential => {\n    return fetch (loginUrl, {\n        method: 'POST',\n        header: {\n            'Content-type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(credential)\n    }).then( response => {\n        if(response.status !== 200) {\n            throw Error('Fail to login')\n        }\n        return response.json();\n    })\n}\n\nconst registerUrl = `${SERVER_ORIGIN}/register`;\nexport const register = (data) => {\n    return fetch(registerUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to register');\n        }\n    })\n}\n\nconst logoutUrl = `${SERVER_ORIGIN}/logout`;\n\nexport const logout = () => {\n    return fetch(logoutUrl, {\n        method: 'POST',\n        credentials: 'include',\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to log out');\n        }\n    })\n}\n\nconst topGamesUrl = `${SERVER_ORIGIN}/game`;\n\nexport const getTopGames = () => {\n    return fetch(topGamesUrl).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to get top games');\n        }\n\n        return response.json();\n    })\n}\n\nconst getGameDetailsUrl = `${SERVER_ORIGIN}/game?game_name=`;\n\nconst getGameDetails = (gameName) => {\n    return fetch(`${getGameDetailsUrl}${gameName}`).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to find the game');\n        }\n\n        return response.json();\n    });\n}\n\nconst searchGameByIdUrl = `${SERVER_ORIGIN}/search?game_id=`;\n\nexport const searchGameById = (gameId) => {\n    return fetch(`${searchGameByIdUrl}${gameId}`).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to find the game');\n        }\n        return response.json();\n    })\n}\n\nexport const searchGameByName = (gameName) => {\n    return getGameDetails(gameName).then((data) => {\n        if (data && data.id) {\n            return searchGameById(data.id);\n        }\n\n        throw Error('Fail to find the game')\n    })\n}\n\nconst favoriteItemUrl = `${SERVER_ORIGIN}/favorite`;\n\nexport const addFavoriteItem = (favItem) => {\n    return fetch(favoriteItemUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ favorite: favItem })\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to add favorite item');\n        }\n    })\n}\n\nexport const deleteFavoriteItem = (favItem) => {\n    return fetch(favoriteItemUrl, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ favorite: favItem })\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to delete favorite item');\n        }\n    })\n}\n\nexport const getFavoriteItem = () => {\n    return fetch(favoriteItemUrl, {\n        credentials: 'include',\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to get favorite item');\n        }\n\n        return response.json();\n    })\n}\n\nconst getRecommendedItemsUrl = `${SERVER_ORIGIN}/recommendation`;\n\nexport const getRecommendations = () => {\n    return fetch(getRecommendedItemsUrl, {\n        credentials: 'include',\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to get recommended item');\n        }\n\n        return response.json();\n    })\n}\n","import React, {Component} from \"react\";\nimport { Modal, Button } from 'antd';\nimport { Form, Input, Checkbox, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { login} from \"../utils\";\n\nclass Login extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.isModalVisible = false;\n    //     this.state = {\n    //         isModalVisible: false\n    //     }\n    // }\n\n    state = {\n        displayModal: false\n    }\n\n    render() {\n        const { displayModal } = this.state;\n        return (\n            <div>\n                <Button shape=\"round\"\n                        onClick={this.signinOnClick}\n                        style={{marginRight: 20}}\n                >\n                    Login\n                </Button>\n                <Modal title=\"Log in\"\n                       visible={displayModal}\n                       onCancel={this.handleCancel}\n                       footer={null}\n                       destroyOnClose={true}\n                >\n                    <Form\n                        name=\"normal_login\"\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"user_id\"\n                            rules={[\n                                {\n                                    required: true, message: 'Please input your Username!'\n                                }\n                            ]}\n                        >\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true, message: 'Please input your Password!'\n                                }\n                            ]}\n                        >\n                            <Input\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" >\n                                Log in\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n\n    signinOnClick = () => {\n        // displayModal => true\n        console.log('sign in clicked')\n        this.setState({displayModal: true})\n    }\n    handleCancel = () => {\n        // displayModal => false\n        console.log('cancel clicked')\n\n        this.setState({displayModal: false})\n    }\n    onFinish = (values) => {\n        // step 1: collect username and password from form\n        console.log('Received values of form: ', values);\n        // step 2: send data to the server\n        login(values)\n            .then( values => {\n                console.log(values);\n                // close modal\n                this.setState({displayModal: false})\n                // inform APP.js(login status)\n\n                message.success(`Welcome back, ${values.name}`)\n                this.props.onSuccess();\n            })\n            .catch(err => {\n                message.error(err.message)\n            })\n    };\n\n}\n\n    export default Login;","import React, {Component} from \"react\";\nimport { Modal, Button } from 'antd';\nimport { Form, Input, Checkbox, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport {register} from \"../utils\";\nimport Login from \"./Login\";\n\nclass Register extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.isModalVisible = false;\n    //     this.state = {\n    //         isModalVisible: false\n    //     }\n    // }\n\n    state = {\n        displayModal: false\n    }\n\n    render() {\n        const { displayModal } = this.state;\n        return (\n            <div>\n                <Button shape=\"round\"\n                        type=\"primary\"\n                        onClick={this.signupOnClick}\n                        style={{marginRight: 20}}\n                >\n                    Register\n                </Button>\n                <Modal title=\"Register\"\n                       visible={displayModal}\n                       onCancel={this.handleCancel}\n                       footer={null}\n                       destroyOnClose={true}\n                >\n                    <Form\n                        name=\"normal_register\"\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"user_id\"\n                            rules={[\n                                {\n                                    required: true, message: 'Please input your Username!'\n                                }\n                            ]}\n                        >\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true, message: 'Please input your Password!'\n                                }\n                            ]}\n                        >\n                            <Input\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"first_name\"\n                            rules={[{ required: true, message: 'Please input your Firstname!' }]}\n                        >\n                            <Input\n                                placeholder=\"firstname\"\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"last_name\"\n                            rules={[{ required: true, message: 'Please input your Lastname!' }]}\n                        >\n                            <Input\n                                placeholder=\"lastname\"\n                            />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" >\n                                Log in\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n    signupOnClick = () => {\n        // displayModal => true\n        console.log('sign in clicked')\n        this.setState({displayModal: true})\n    }\n    handleCancel = () => {\n        // displayModal => false\n        console.log('cancle clicked')\n    }\n    onFinish = (values) => {\n        // step 1: collect username and password, first and last name from form\n        console.log('Received values of form: ', values);\n        // step 2: send data to the server\n        register(values)\n            .then( res => {\n                console.log(res);\n                // close modal\n                this.setState({displayModal: false})\n                message.success('Register successfully')\n            })\n            .catch(err => {\n                message.error(err.message)\n            })\n    };\n}\nexport default Register;","import React from 'react';\nimport { Menu, Button, Drawer } from 'antd';\nimport { EyeOutlined, YoutubeOutlined, VideoCameraOutlined, StarFilled }\n    from '@ant-design/icons';\n// import { getFavoriteItem } from '../utils';\n\nconst {SubMenu} = Menu;\n\nconst MenuKey = {\n    Streams: 'streams',\n    Videos: 'videos',\n    Clips: 'clips'\n}\n\nclass Favorites extends React.Component{\n    state = {\n        displayDrawer:false,\n\n    }\n\n    onDrawerClose = () => {\n        this.setState({\n            displayDrawer: false,\n\n        })\n    }\n\n    onFavoriteClick = () => {\n        // // step1: get favorite items\n        // // step2: set displayDrawer to be true\n        // getFavoriteItem()\n        //     .then((data) => {\n        //         console.log(data);\n        //         this.setState({\n        //             data: data,\n        //             displayDrawer: true,\n        //         })\n        //     })\n        //     .catch((err) => {\n        //     message.error(err.message);\n        // })\n        this.setState({\n            displayDrawer: true,\n        })\n\n    }\n\n    render = () => {\n        const { VIDEO, STREAM, CLIP } = this.props.data;\n        return (\n            <>\n                <Button type=\"primary\" shape=\"round\"\n                        onClick={this.onFavoriteClick}\n                        icon={<StarFilled />}>\n                    My Favorites</Button>\n                <Drawer\n                    title=\"My Favorites\"\n                    placement=\"right\"\n                    width={720}\n                    visible={this.state.displayDrawer}\n                    onClose={this.onDrawerClose}\n                >\n                    <Menu\n                        mode=\"inline\"\n                        defaultOpenKeys={[MenuKey.Streams]}\n                        style={{ height: '100%', borderRight: 0 }}\n                        selectable={false}\n                    >\n                        <SubMenu key={MenuKey.Streams}\n                                 icon={<EyeOutlined />}\n                                 title=\"Streams\">\n                            {\n                                STREAM.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                        <SubMenu key={MenuKey.Videos}\n                                 icon={<YoutubeOutlined />}\n                                 title=\"Videos\">\n                            {\n                                VIDEO.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                        <SubMenu key={MenuKey.Clips} icon={<VideoCameraOutlined />} title=\"Clips\">\n                            {\n                                CLIP.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                    </Menu>\n                </Drawer>\n\n            </>\n        );\n    }\n}\n\nexport default Favorites;","import React from 'react';\nimport { Button, Form, Input, message, Modal } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { searchGameByName } from '../utils';\n\nclass CustomSearch extends React.Component {\n    state = {\n        displayModal: false\n    }\n    handleCancel = () => {\n        this.setState({\n            displayModal: false,\n        })\n    }\n\n    searchOnClick = () => {\n        this.setState({\n            displayModal: true,\n        })\n    }\n\n    onSubmit = (data) => {\n        // step1: get search keyword\n        // step2: do search on the server and get the result\n        searchGameByName(data.game_name)\n            .then((data) => {\n                // console.log(data);\n                this.setState({\n                    displayModal: false,\n                })\n                this.props.onSuccess(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n    }\n\n    render = () => {\n        return (\n            <div>\n                <Button shape=\"round\"\n                        onClick={this.searchOnClick}\n                        icon={<SearchOutlined />}\n                        style={{ marginLeft: '20px', marginTop: '20px'}}>\n                    Custom Search</Button>\n                <Modal\n                    title=\"Custom Search\"\n                    visible={this.state.displayModal}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                >\n                    <Form\n                        name=\"custom_search\"\n                        onFinish={this.onSubmit}\n                    >\n                        <Form.Item\n                            name=\"game_name\"\n                            rules={[{ required: true,\n                                message: 'Please enter a game name' }]}\n                        >\n                            <Input placeholder=\"Game name\" />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Search</Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default CustomSearch;","import React from 'react';\nimport { Button, Card, List, message, Tabs, Tooltip } from 'antd';\nimport { StarOutlined, StarFilled } from '@ant-design/icons';\nimport { addFavoriteItem, deleteFavoriteItem } from '../utils';\n\nconst { TabPane } = Tabs;\nconst tabKeys = {\n    Streams: 'stream',\n    Videos: 'videos',\n    Clips: 'clips',\n}\n\nconst processUrl = (url) => url\n    .replace('%{height}', '252')\n    .replace('%{width}', '480')\n    .replace('{height}', '252')\n    .replace('{width}', '480');\n\nconst renderCardTitle = (item, loggedIn, favs, favOnChange) => {\n    const title = `${item.broadcaster_name} - ${item.title}`;\n\n    const isFav = favs.find((fav) => fav.id === item.id);\n\n    const favOnClick = () => {\n        if (isFav) {\n            deleteFavoriteItem(item).then(() => {\n                favOnChange();\n            }).catch(err => {\n                message.error(err.message)\n            })\n\n            return;\n        }\n\n        addFavoriteItem(item).then(() => {\n            favOnChange();\n        }).catch(err => {\n            message.error(err.message)\n        })\n    }\n\n    return (\n        <>\n            {\n                loggedIn &&\n                <Tooltip title={isFav ? \"Remove from favorite list\" : \"Add to favorite list\"}>\n                    <Button shape=\"circle\" icon={isFav ? <StarFilled /> : <StarOutlined />} onClick={favOnClick} />\n                </Tooltip>\n            }\n            <div style={{ overflow: 'hidden', textOverflow: 'ellipsis', width: 450 }}>\n                <Tooltip title={title}>\n                    <span>{title}</span>\n                </Tooltip>\n            </div>\n        </>\n    )\n}\n\nconst renderCardGrid = (data, loggedIn, favs, favOnChange) => {\n    return (\n        <List\n            grid={{\n                xs: 1,\n                sm: 2,\n                md: 4,\n                lg: 4,\n                xl: 6,\n            }}\n            dataSource={data}\n            renderItem={item => (\n                <List.Item style={{ marginRight: '20px' }}>\n                    <Card\n                        title={renderCardTitle(item, loggedIn, favs, favOnChange)}\n                    >\n                        <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <img\n                                alt=\"Placeholder\"\n                                src={processUrl(item.thumbnail_url)}\n                            />\n                        </a>\n                    </Card>\n                </List.Item>\n            )}\n        />\n    )\n}\n\nconst Home = ({ resources, loggedIn, favoriteItems, favoriteOnChange }) => {\n    const { VIDEO, STREAM, CLIP } = resources;\n    const { VIDEO: favVideos, STREAM: favStreams, CLIP: favClips} = favoriteItems;\n\n    return (\n        <Tabs\n            defaultActiveKey={tabKeys.Streams}\n        >\n            <TabPane tab=\"Streams\" key={tabKeys.Streams} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\n                {renderCardGrid(STREAM, loggedIn, favStreams, favoriteOnChange)}\n            </TabPane>\n            <TabPane tab=\"Videos\" key={tabKeys.Videos} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\n                {renderCardGrid(VIDEO, loggedIn, favVideos, favoriteOnChange)}\n            </TabPane>\n            <TabPane tab=\"Clips\" key={tabKeys.Clips} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\n                {renderCardGrid(CLIP, loggedIn, favClips, favoriteOnChange)}\n            </TabPane>\n        </Tabs>\n    );\n}\n\nexport default Home;","import React, {Component, useLayoutEffect} from 'react';\nimport {Layout, Row, Col, Button, message, Menu} from 'antd';\nimport { LikeOutlined, FireOutlined } from '@ant-design/icons';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Favorites from './components/Favorites';\nimport CustomSearch from './components/CustomSearch';\nimport Home from \"./components/Home\";\n\n\nimport {getFavoriteItem,getRecommendations, getTopGames, logout, searchGameById} from './utils';\n\n\nconst { Header, Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\nclass App extends React.Component {\n\n    state = {\n        loggedIn: false,\n        topGames: [],\n        resources: {\n            VIDEO: [],\n            STREAM: [],\n            CLIP: [],\n        },\n        favoriteItems: [],\n    }\n\n    customSearchOnSuccess = (data) => {\n        this.setState({\n            resources: data,\n        })\n    }\n\n    favoriteOnChange = () => {\n        getFavoriteItem().then((data) => {\n            this.setState({\n                favoriteItems: data,\n                loggedIn: true\n            })\n        }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n\n    signinOnSuccess = () => {\n        getFavoriteItem().then((data) => {\n            console.log('data ', data);\n            this.setState({\n                favoriteItems: data,\n                loggedIn: true\n            })\n        }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    signoutOnClick = () => {\n        logout()\n            .then(() => {\n                this.setState({\n                    loggedIn: false\n                })\n                message.success(`Successfully signed out`);\n            }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    componentDidMount() {\n        // fetch top games from the server\n        getTopGames()\n            .then((data) => {\n                console.log('1 ', data)\n                // render top games\n                this.setState({\n                    topGames: data\n                })\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n    }\n\n    onGameSelect = ({ key }) => {\n        if (key === 'Recommendation') {\n            getRecommendations().then((data) => {\n                this.setState({\n                    resources: data,\n                })\n            })\n\n            return;\n        }\n\n        searchGameById(key).then((data) => {\n            this.setState({\n                resources: data,\n            })\n        })\n    }\n\n\n    render() {\n        const {loggedIn} = this.state;\n\n        return (\n        <Layout>\n          <Header>\n              <Row justify=\"space-between\">\n                  <Col>\n                      {\n                          loggedIn && <Favorites data={this.state.favoriteItems} />\n                      }\n                  </Col>\n                  <Col>\n                      {\n                          // case 1: user already login\n                          // case 2: use hasn't login\n                          loggedIn\n                              ?\n                              <Button shape=\"round\" onClick={this.signoutOnClick}>\n                                      Logout</Button>\n                              :\n                              <div style={{display: 'flex'}}>\n                                  <Login onSuccess={this.signinOnSuccess}/>\n                                  <Register />\n                              </div>\n                      }\n                  </Col>\n              </Row>\n\n          </Header>\n          <Layout>\n            <Sider\n                width={300}\n                className=\"site-layout-background\"\n            >\n                <CustomSearch onSuccess={this.customSearchOnSuccess} />\n                <Menu\n                    mode=\"inline\"\n                    onSelect={this.onGameSelect}\n                    style={{ marginTop: '10px' }}\n                >\n                    <Menu.Item icon={<LikeOutlined />} key=\"Recommendation\">\n                        Recommend for you!</Menu.Item>\n                    <SubMenu icon={<FireOutlined />} key=\"Popular Games\" title=\"Popular Games\" className=\"site-top-game-list\" >\n                        {\n                            this.state.topGames.map((game) => {\n                                return (\n                                    <Menu.Item key={game.id} style={{ height: '50px' }}>\n                                        <img\n                                            alt=\"Placeholder\"\n                                            src={game.box_art_url.replace('{height}', '40').replace('{width}', '40')}\n                                            style={{ borderRadius: '50%', marginRight: '20px' }}\n                                        />\n                                        <span>\n                        {game.name}\n                      </span>\n                                    </Menu.Item>\n                                )\n                            })\n                        }\n                    </SubMenu>\n                </Menu>\n            </Sider>\n            <Layout stype={{padding: '24px'}}>\n              <Content\n                className=\"site-layout-background\"\n                style={{\n                    padding: 24,\n                    margin: 0,\n                    height: 800,\n                    overflow: 'auto'\n                }}\n              >\n                  <Home resources={this.state.resources}\n                        loggedIn={this.state.loggedIn}\n                        favoriteItems={this.state.favoriteItems}\n                        favoriteOnChange={this.favoriteOnChange}\n                  />\n              </Content>\n            </Layout>\n          </Layout>\n        </Layout>\n\n    )\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring perfoprmance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}